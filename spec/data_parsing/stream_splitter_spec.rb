require 'spec_helper'

describe P1MeterReader::DataParsing::StreamSplitter do
  let(:io) { StringIO.new(example_data) }
  let(:message_start) { "/XMX5XMXABCE100129872" }

  subject { P1MeterReader::DataParsing::StreamSplitter.new(io, message_start) }

  describe :read do
    context "when there are messages" do
      it "returns them" do
        subject.read.should == message_1
        subject.read.should == message_2
      end
    end
  end
end

def message_1
  <<-END
/XMX5XMXABCE100129872

0-0:96.1.1(4B414145303031343535343236383133)
1-0:1.8.1(00569.468*kWh)
1-0:1.8.2(00611.553*kWh)
1-0:2.8.1(00000.000*kWh)
1-0:2.8.2(00000.000*kWh)
0-0:96.14.0(0001)
1-0:1.7.0(0000.24*kW)
1-0:2.7.0(0000.00*kW)
0-0:17.0.0(999*A)
0-0:96.3.10(1)
0-0:96.13.1()
0-0:96.13.0()
0-1:96.1.0(3238303131303038333338303831393133)
0-1:24.1.0(03)
0-1:24.3.0(140302090000)(00)(60)(1)(0-1:24.2.0)(m3)
(00752.674)
0-1:24.4.0(1)
!
  END
end

def message_2
  <<-END
/XMX5XMXABCE100129872

0-0:96.1.1(4B414145303031343535343236383133)
1-0:1.8.1(00569.469*kWh)
1-0:1.8.2(00611.553*kWh)
1-0:2.8.1(00000.000*kWh)
1-0:2.8.2(00000.000*kWh)
0-0:96.14.0(0001)
1-0:1.7.0(0000.24*kW)
1-0:2.7.0(0000.00*kW)
0-0:17.0.0(999*A)
0-0:96.3.10(1)
0-0:96.13.1()
0-0:96.13.0()
0-1:96.1.0(3238303131303038333338303831393133)
0-1:24.1.0(03)
0-1:24.3.0(140302090000)(00)(60)(1)(0-1:24.2.0)(m3)
(00752.674)
0-1:24.4.0(1)
!
  END
end

def message_3
  <<-END
/XMX5XMXABCE100129872

0-0:96.1.1(4B414145303031343535343236383133)
1-0:1.8.1(00569.469*kWh)
1-0:1.8.2(00611.553*kWh)
1-0:2.8.1(00000.000*kWh)
1-0:2.8.2(00000.000*kWh)
0-0:96.14.0(0001)
1-0:1.7.0(0000.24*kW)
1-0:2.7.0(0000.00*kW)
0-0:17.0.0(999*A)
0-0:96.3.10(1)
0-0:96.13.1()
0-0:96.13.0()
0-1:96.1.0(3238303131303038333338303831393133)
0-1:24.1.0(03)
0-1:24.3.0(140302090000)(00)(60)(1)(0-1:24.2.0)(m3)
(00752.674)
0-1:24.4.0(1)
!
  END
end

def example_data
  <<-END
#{message_1}
#{message_2}
#{message_3}
  END
end
